// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Job {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    title       String  @db.VarChar(255)
    description String? @db.VarChar(255)
    ui_data     String  @db.Text()
    data        String  @db.LongText()

    customFunctions CustomFunction[]
    variables       Variables[]

    authorId String @db.VarChar(255)
}

model Variables {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name        String  @db.VarChar(255)
    description String? @db.VarChar(255)
    type        String  @db.VarChar(255)
    typeId      String  @default("") @db.VarChar(255)
    required    Boolean @default(false)
    default     String? @db.VarChar(255)
    value       String? @db.VarChar(255)

    jobId String

    job Job[]

    authorId String @db.VarChar(255)
}

model CustomFunction {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name        String       @db.VarChar(255)
    description String?      @db.VarChar(255)
    parameters  Parameters[]

    jobId String

    job Job[]

    authorId String @db.VarChar(255)
}

model Parameters {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name        String  @db.VarChar(255)
    description String? @db.VarChar(255)
    type        String  @db.VarChar(255)
    required    Boolean @default(false)
    default     String? @db.VarChar(255)
    io          String  @db.VarChar(255)

    customFunctionId String

    customFunction CustomFunction @relation(fields: [customFunctionId], references: [id])

    @@index([customFunctionId], name: "customFunctionId")
}

model Pins {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    pinCode String @db.VarChar(255)
    userId  String @db.VarChar(255)
    status  String @db.VarChar(255)

    deviceId          String @db.VarChar(255)
    deviceName        String @db.VarChar(255)
    deviceDescription String @db.VarChar(255)
    deviceType        String @db.VarChar(255)
}

model InstructionSetSchemaVersion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name        String @db.VarChar(255)
    description String @db.VarChar(255)

    data String @db.LongText

    jobid String @db.VarChar(255)

    productionBuild Boolean @default(false)

    authorId String @db.VarChar(255)
}

model APISchema {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name        String @db.VarChar(255)
    description String @db.VarChar(255)

    uri     String @db.VarChar(255)
    method  String @db.VarChar(255)
    headers String @db.LongText
    body    String @db.LongText

    schemaResult String @db.LongText

    authorId String @db.VarChar(255)
}

model VariableType {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    typeName    String @db.VarChar(255)
    description String @db.VarChar(255)
    colorHex    String @default("#000000") @db.VarChar(255)
    jobId       String @db.VarChar(255)

    authorId String @db.VarChar(255)

    @@index([authorId], name: "authorId")
}
